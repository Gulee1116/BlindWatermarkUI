# -*- coding: utf-8 -*-
import sys
import time

import blind_watermark
from PyQt5 import QtCore, QtGui, QtWidgets
from blind_watermark import WaterMark


# Form implementation generated from reading ui file 'uistructer.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


class Ui_MyUI(object):

    def setupUi(self, MyUI):
        MyUI.setObjectName("MyUI")
        MyUI.setEnabled(True)
        MyUI.resize(1000,500)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MyUI.sizePolicy().hasHeightForWidth())
        MyUI.setSizePolicy(sizePolicy)

        font = QtGui.QFont()
        font.setPointSize(10)
        MyUI.setFont(font)

        MyUI.setMinimumSize(QtCore.QSize(506, 0))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("gulee.JPG"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MyUI.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MyUI)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.step1 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.step1.sizePolicy().hasHeightForWidth())
        self.step1.setSizePolicy(sizePolicy)
        self.step1.setObjectName("step1")
        self.verticalLayout_2.addWidget(self.step1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.ChooseButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ChooseButton.sizePolicy().hasHeightForWidth())
        self.ChooseButton.setSizePolicy(sizePolicy)
        self.ChooseButton.setObjectName("ChooseButton")
        self.horizontalLayout.addWidget(self.ChooseButton)
        self.path = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.path.sizePolicy().hasHeightForWidth())
        self.path.setSizePolicy(sizePolicy)
        self.path.setObjectName("path")
        self.horizontalLayout.addWidget(self.path)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.step2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.step2.sizePolicy().hasHeightForWidth())
        self.step2.setSizePolicy(sizePolicy)
        self.step2.setObjectName("step2")
        self.verticalLayout_3.addWidget(self.step2)
        self.Watermark = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Watermark.sizePolicy().hasHeightForWidth())
        self.Watermark.setSizePolicy(sizePolicy)
        self.Watermark.setObjectName("Watermark")
        self.verticalLayout_3.addWidget(self.Watermark)
        self.verticalLayout_2.addLayout(self.verticalLayout_3)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.step3 = QtWidgets.QLabel(self.centralwidget)
        self.step3.setObjectName("step3")
        self.verticalLayout_7.addWidget(self.step3)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.verticalLayout_7.addWidget(self.comboBox)
        self.horizontalLayout_3.addLayout(self.verticalLayout_7)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.step4 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.step4.sizePolicy().hasHeightForWidth())
        self.step4.setSizePolicy(sizePolicy)
        self.step4.setObjectName("step4")
        self.verticalLayout_4.addWidget(self.step4)
        self.OKbutton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OKbutton.sizePolicy().hasHeightForWidth())
        self.OKbutton.setSizePolicy(sizePolicy)
        self.OKbutton.setAutoDefault(True)
        self.OKbutton.setObjectName("OKbutton")
        self.verticalLayout_4.addWidget(self.OKbutton)
        self.horizontalLayout_3.addLayout(self.verticalLayout_4)
        self.verticalLayout_2.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.picturetip = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.picturetip.sizePolicy().hasHeightForWidth())
        self.picturetip.setSizePolicy(sizePolicy)
        self.picturetip.setObjectName("picturetip")
        self.verticalLayout.addWidget(self.picturetip)
        self.picture = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.picture.sizePolicy().hasHeightForWidth())
        self.picture.setSizePolicy(sizePolicy)
        self.picture.setMinimumSize(QtCore.QSize(500, 500))
        self.picture.setMaximumSize(QtCore.QSize(500, 500))
        self.picture.setObjectName("picture")
        self.verticalLayout.addWidget(self.picture)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        self.horizontalLayout_2.setStretch(0, 1)
        self.horizontalLayout_2.setStretch(1, 1)
        self.gridLayout.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.messagetip = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.messagetip.sizePolicy().hasHeightForWidth())
        self.messagetip.setSizePolicy(sizePolicy)
        self.messagetip.setMaximumSize(QtCore.QSize(16777215, 40))
        self.messagetip.setObjectName("messagetip")
        self.verticalLayout_5.addWidget(self.messagetip)
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser.sizePolicy().hasHeightForWidth())
        self.textBrowser.setSizePolicy(sizePolicy)
        self.textBrowser.setMaximumSize(QtCore.QSize(16777215, 500))
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout_5.addWidget(self.textBrowser)
        self.gridLayout.addLayout(self.verticalLayout_5, 1, 0, 1, 1)
        self.gridLayout.setRowStretch(0, 2)
        self.gridLayout.setRowStretch(1, 1)
        self.horizontalLayout_4.addLayout(self.gridLayout)
        MyUI.setCentralWidget(self.centralwidget)

        self.retranslateUi(MyUI)
        QtCore.QMetaObject.connectSlotsByName(MyUI)

        self.OKbutton.clicked.connect(lambda: self.act())
        self.ChooseButton.clicked.connect(lambda: self.getpic())
        self.comboBox.currentTextChanged.connect(lambda: self.typetoggle())
        self.Watermark.selectionChanged.connect(lambda : self.select())

        self.textBrowser.setReadOnly(True)
        self.scorllbar = self.textBrowser.verticalScrollBar()

        font.setPointSize(12)
        self.step1.setFont(font)
        self.step2.setFont(font)
        self.messagetip.setFont(font)
        self.comboBox.setFont(font)
        self.ChooseButton.setFont(font)
        self.picturetip.setFont(font)
        self.say('你好！')
        self.say('这是隐水印制作/识别器，可以为你的图片增添看不出来的水印！')
        self.say('请按上方规则使用！have fun！')
        self.say('author：@顾乐：github.com/Gulee1116')
        self.say('致谢：@郭飞：github.com/guofei9987')
        self.say('_________')
        self.say('')
        self.say('')

        self.textBrowser.textChanged.connect(lambda : self.textBrowser.moveCursor(11))
    def retranslateUi(self, MyUI):
        _translate = QtCore.QCoreApplication.translate
        MyUI.setWindowTitle(_translate("MyUI", "水印v0.1 - Gulee"))
        self.step1.setText(_translate("MyUI", "1.选择需要加水印或是识别水印的画"))
        self.ChooseButton.setText(_translate("MyUI", "选择"))
        self.path.setText(_translate("MyUI", "已选择路径："))
        self.step2.setText(_translate("MyUI", "2.在下方空白处输入水印内容/密码"))
        self.Watermark.setText(_translate("MyUI", "加水印：输入内容；识别：输入密码"))
        self.step3.setText(_translate("MyUI", "3.选择你的行为"))
        self.comboBox.setItemText(0, _translate("MyUI", "加水印"))
        self.comboBox.setItemText(1, _translate("MyUI", "识别水印"))
        self.step4.setText(_translate("MyUI", "4.点击确认，开始执行"))
        self.OKbutton.setText(_translate("MyUI", "确认"))
        self.picturetip.setText(_translate("MyUI", "你的画"))
        self.picture.setText(_translate("MyUI", "你选择的画会在这里显示，请无视它的变形（）"))
        self.messagetip.setText(_translate("MyUI", "消息栏"))

    def say(self, content: str):
        self.textBrowser.append(content)

    picpath = ""
    pictype = ""
    excpath = ""

    def typetoggle(self):
        self.say(f"模式已切换：{self.comboBox.currentText()}")

    def getpic(self):
        self.picpath, self.pictype = QtWidgets.QFileDialog.getOpenFileName(
            None,
            '选择图片',
            '.',
            '' 'Image files (*.png;*.jpg;*.PNG;*.JPG)',
        )
        pic = self.picpath.split('.')[-1]
        if pic == "":
            self.say("【错误】没有收到图片")
        elif not (
                pic.endswith("png")
                or pic.endswith("PNG")
                or pic.endswith("jpg")
                or pic.endswith("JPG")
        ):
            self.say("【错误】选择的文件不是图片")
        else:
            self.picpath = self.picpath.strip(f'.{pic}')
            self.path.setText(f"已选择：{self.picpath.split('/')[-1]}")
            self.say(f"已选择：{self.picpath.split('/')[-1]}")
            self.excpath = self.picpath + f"_exc.{pic}"
            self.picpath = self.picpath + f'.{pic}'
            pic = QtGui.QPixmap(self.picpath)
            self.picture.setPixmap(pic)
            self.picture.setScaledContents(True)

    def act(self):
        if self.comboBox.currentText() == "加水印":
            bwm1 = WaterMark(password_img=1, password_wm=1)
            bwm1.read_img(self.picpath)
            wm = self.Watermark.text()
            bwm1.read_wm(f"{wm}", mode='str')
            bwm1.embed(self.excpath)
            length = len(bwm1.wm_bit)
            self.say(f"添加完成！")
            self.say(f"添加水印的图片路径：{self.excpath}")
            self.say(f'你水印的密码：{length}')
            self.say('请牢记密码，用以识别水印！')
        if self.comboBox.currentText() == "识别水印" :
            bwm1 = WaterMark(password_img=1, password_wm=1)
            wm_extract = bwm1.extract(self.picpath, wm_shape=int(self.Watermark.text()), mode='str')
            self.say(f"识别完成！")
            self.say(f"识别的水印为：{wm_extract}")

    def select(self):
        self.Watermark.setText("")

if __name__ == "__main__":
    blind_watermark.bw_notes.close()

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MyUI()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
